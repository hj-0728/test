[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.poetry]
name = "edu-binshi-school-evaluation"
version = "0.1.0"
description = ""
authors = ["wei.fang <wei.fang@qindingtech.com>"]

[[tool.poetry.source]]
name = "tencent"
url = "https://mirrors.cloud.tencent.com/pypi/simple/"
priority = "default"

[[tool.poetry.source]]
name = "nexus"
url = "https://yundi:yundi@repository.qindingtech.com/repository/pypi-public/simple/"
priority = "supplemental"

[tool.poetry.dependencies]
python = "~3.11"
requests = "^2.26"
orjson = "^3.8.7"
infra-basic = {version = "^2023.2.4", source = "nexus"}
infra-pub-sub-manager = { version = "^2023.2.2", source = "nexus" }
infra-object-storage = { version = "2023.2.3", source = "nexus" }
minio = "^7.1.3"
boto3 = "1.19.3"
flask = "^2.1,<2.3.0"
flask-sqlalchemy = "^3.0.3"
flask-caching = "^2.0.2"
flask-babel = "^3.1.0"
flask-cors = "^3.0"
flask-jwt-extended = "^4.3"
geoalchemy2 = "^0.13.1"
gevent = { version = "^22.10.2", platform = "linux" }
gunicorn = { version = "^20.1.0", platform = "linux" }
jsonpickle = "^3.0.1"
pillow = "^9.0"
wechatpayv3 = "^1.2.35"
wechatpy = "^1.8.18"
pypinyin = "^0.49.0"
apscheduler = "^3.10.1"
dingtalk-sdk = "^1.3.8"
infra-utility = "2023.1.12"
python-docx = "^0.8.11"
openpyxl = "3.1.2"


[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
isort = "^5.12.0"
black = "^23.3.0"
pytest-asyncio = "^0.21.0"
pylint = "^2.17.4"

[project.urls]
Home = "https://www.qindingtech.com"
Gitlab = "https://gitlab.qindingtech.com"

[tool.flit.sdist]
include = ["CHANGELOG.md", "LICENSE.md"]
exclude = [
    ".pypirc", "pip.ini",
    "pytest.ini", ".flake8",
    "requirements.txt",
    "DEV_README.md",
    "tests", "scripts"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "info"
log_cli_format = "[%(asctime)s] %(process)d [%(levelname)s]: %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = "-s"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | venv
    | _build
    | buck-out
    | build
    | dist
  )/
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
atomic = false
combine_as_imports = true
ensure_newline_before_comments = false
filter_files = true
force_alphabetical_sort_within_sections = true
force_grid_wrap = 0
known_first_party = "poetry"
line_length = 100
lines_after_imports = -1
lines_between_types = 0
profile = "black"
remove_redundant_aliases = true
skip_glob = ["*/setup.py"]
use_parentheses = true

[tool.pylint.MASTER]
ignore = ''

[tool.pylint.FORMAT]
max-line-length = 100

[tool.pylint.'MESSAGES CONTROL']
disable = "C0302,R0902,R0904,C0103,R0022,W0613,R1702,R0914,W0511,C0112,W0212,E2511,C0304, C0301,C0303, E0611,C0411, R0903,R0913, W0703, C0114, C0115, C0116, I1101, R0801"


[tool.pylint.SIMILARITIES]
min-similarity-lines = 8
ignore-comments = true
ignore-docstrings = true
ignore-imports = true